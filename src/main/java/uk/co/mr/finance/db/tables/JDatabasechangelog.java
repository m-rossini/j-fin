/*
 * This file is generated by jOOQ.
 */
package uk.co.mr.finance.db.tables;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import uk.co.mr.finance.db.JPublic;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JDatabasechangelog extends TableImpl<Record> {

    private static final long serialVersionUID = -1179030507;

    /**
     * The reference instance of <code>public.databasechangelog</code>
     */
    public static final JDatabasechangelog DATABASECHANGELOG = new JDatabasechangelog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>public.databasechangelog.id</code>.
     */
    public final TableField<Record, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.databasechangelog.author</code>.
     */
    public final TableField<Record, String> AUTHOR = createField(DSL.name("author"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.databasechangelog.filename</code>.
     */
    public final TableField<Record, String> FILENAME = createField(DSL.name("filename"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.databasechangelog.dateexecuted</code>.
     */
    public final TableField<Record, LocalDateTime> DATEEXECUTED = createField(DSL.name("dateexecuted"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.databasechangelog.orderexecuted</code>.
     */
    public final TableField<Record, Integer> ORDEREXECUTED = createField(DSL.name("orderexecuted"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.databasechangelog.exectype</code>.
     */
    public final TableField<Record, String> EXECTYPE = createField(DSL.name("exectype"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.databasechangelog.md5sum</code>.
     */
    public final TableField<Record, String> MD5SUM = createField(DSL.name("md5sum"), org.jooq.impl.SQLDataType.VARCHAR(35), this, "");

    /**
     * The column <code>public.databasechangelog.description</code>.
     */
    public final TableField<Record, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.databasechangelog.comments</code>.
     */
    public final TableField<Record, String> COMMENTS = createField(DSL.name("comments"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.databasechangelog.tag</code>.
     */
    public final TableField<Record, String> TAG = createField(DSL.name("tag"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.databasechangelog.liquibase</code>.
     */
    public final TableField<Record, String> LIQUIBASE = createField(DSL.name("liquibase"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>public.databasechangelog.contexts</code>.
     */
    public final TableField<Record, String> CONTEXTS = createField(DSL.name("contexts"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.databasechangelog.labels</code>.
     */
    public final TableField<Record, String> LABELS = createField(DSL.name("labels"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.databasechangelog.deployment_id</code>.
     */
    public final TableField<Record, String> DEPLOYMENT_ID = createField(DSL.name("deployment_id"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * Create a <code>public.databasechangelog</code> table reference
     */
    public JDatabasechangelog() {
        this(DSL.name("databasechangelog"), null);
    }

    /**
     * Create an aliased <code>public.databasechangelog</code> table reference
     */
    public JDatabasechangelog(String alias) {
        this(DSL.name(alias), DATABASECHANGELOG);
    }

    /**
     * Create an aliased <code>public.databasechangelog</code> table reference
     */
    public JDatabasechangelog(Name alias) {
        this(alias, DATABASECHANGELOG);
    }

    private JDatabasechangelog(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private JDatabasechangelog(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JDatabasechangelog(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, DATABASECHANGELOG);
    }

    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    @Override
    public JDatabasechangelog as(String alias) {
        return new JDatabasechangelog(DSL.name(alias), this);
    }

    @Override
    public JDatabasechangelog as(Name alias) {
        return new JDatabasechangelog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JDatabasechangelog rename(String name) {
        return new JDatabasechangelog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JDatabasechangelog rename(Name name) {
        return new JDatabasechangelog(name, null);
    }
}
